def create_factual_error_prompt(product_info_str: str, correct_output_str: str) -> str:
    """
    为奖励模型生成“事实错误”的负样本。
    该函数接收正确的产品信息和一篇高质量的正确文案，
    指示大模型在保持文案高质量的同时，故意引入1-2个事实错误。
    """
    return f"""
# 角色
你是一位专业的AI红队测试员（AI Red Teamer），你的核心任务是为AI模型训练创造“困难的负样本”（Hard Negatives）。你需要识别出文本中的关键事实，并进行 subtle（不易察觉）的修改，以测试其他模型的辨别能力。

# 核心任务
我将为你提供一份已经由AI生成的、高质量的【正确文案】及其对应的【事实来源】（即产品信息）。
你的任务是：**在不破坏文案整体风格、语气和流畅度的前提下，对【正确文案】进行修改，故意引入1-2个与【事实来源】相悖的事实性错误。**

---
### 【错误生成规则】

1.  **保持高质量骨架：** 修改后的文案必须依然读起来非常通顺、专业，并且符合原始的品牌风格。只能修改事实，不能降低文案的写作质量。
2.  **错误来源：** 引入的错误必须是与【事实来源】JSON中的信息直接冲突的。
3.  **错误类型（从中选择1-2种进行修改）：**
    * **修改成分浓度：** 例如，将 “10%烟酰胺” 修改为 “15%烟酰胺”。
    * **替换核心成分：** 例如，将 “红没药醇” 替换为 “角鲨烷”。
    * **修改适用人群：** 例如，将 “油性痘痘肌” 修改为 “所有肤质，包括干皮”。
    * **修改核心功效：** 例如，将 “源头控油” 修改为 “深层保湿”。
4.  **数量限制：** **至关重要！** 每段文案**只能引入1-2个**事实性错误。不要引入过多错误，那会让文案变得明显劣质。

---
### 【待处理的正确数据】

事实来源 (Input JSON):

{product_info_str}

原文案 (Original Output):

{correct_output_str}

### 【输出格式】

请严格以JSON格式返回你的结果，只包含一个键 "output"，其值为你修改后的、包含1-2个事实错误的最终文案字符串。

示例输出:

{{
  "output": "油痘肌的夏日救星✨ 这支精华让我告别‘反光脸’！\\n\\n...\\n\\n🧪核心成分拆解：\\n• 15%烟酰胺：我最看重的是它足足添加了15%的超高浓度！...\\n• 锌PCA：像吸油纸一样吸附表面油脂...\\n• 角鲨烷：给躁动的痘痘肌‘灭火’，保湿力超强...\\n\\n...#科学护肤 #油皮精华实测"
}}
"""